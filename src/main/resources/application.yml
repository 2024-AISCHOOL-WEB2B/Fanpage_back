config:
  type: aws-parameterstore:/config/goodswap/

spring:
  config:
    import: ${config.type}  # AWS Parameter Store 설정을 가져옵니다.

  datasource:
    url: ${db.url}
    username: ${db.user}
    password: ${db.password}

  redis:
    host: localhost
    port: 6379
    timeout: 5000

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${gmail.username}
    password: ${gmail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    open-in-view: false

# JWT 설정 (로컬 환경 변수를 사용하도록 설정)
jwt:
  secret: ${jwt.key:}  # 환경변수 `jwt.key`를 우선 사용하고, 없으면 AWS에서 가져오지 않음.
  access-token-expiration: 86400000  # 1일
  refresh-token-expiration: 604800000  # 7일

aes:  # AES 키 설정
  key: ${aes.key}  # 환경 변수 AES_KEY로부터 키 값을 가져옵니다.

springdoc:
  swagger-ui:
    path: /api-test
    groups-order: DESC
    tags-sorter: alpha
    operations-sorter: alpha
  paths-to-match:
    - /api/**  # swagger-ui에 표시할 api의 엔드포인트 패턴

cloud:
  aws:
    parameterstore:
      enabled: true
      defaultContext: /config/goodswap/  # AWS Parameter Store 경로 설정
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}  # 환경 변수로 설정된 액세스 키 사용
      secret-key: ${AWS_SECRET_ACCESS_KEY}  # 환경 변수로 설정된 비밀 키 사용
    region:
      static: ap-northeast-2
    s3:
      bucket: goodswap-s3-bucket
    stack:
      auto: false

logging:
  level:
    org.springframework.cloud.aws: DEBUG

server:
  address: 0.0.0.0
  port: 8081

  logging:
    level:
      org.springframework.security: DEBUG
      org.springframework.core.env: DEBUG
      org.springframework.cloud.aws: DEBUG
