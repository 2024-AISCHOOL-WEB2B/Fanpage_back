config:
  type: aws-parameterstore:/config/goodswap/

spring:
  config:
    import: ${config.type}
  datasource:
    url: ${db.url}
    username: ${db.user}
    password: ${db.password}
  redis:
    host: localhost
    port: 6379
    # 필요에 따라 추가 설정을 넣을 수 있습니다.
    # password: <Redis 비밀번호> (비밀번호가 있는 경우에만 설정)
    timeout: 5000
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${gmail.username}
    password: ${gmail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    open-in-view: false

# JWT 설정
jwt:
  secret: ${jwt.key} # JWT 서명을 위한 비밀 키
  access-token-expiration: 86400000 # 1일
  refresh-token-expiration: 604800000 # 7일

aes:  # AES 키 설정 추가
  key: ${aes.key}  # 환경 변수 AES_KEY로부터 키 값을 가져옵니다.

springdoc:
  swagger-ui:
    path: /api-test  # swagger-ui 접근 경로에 대한 별칭, 해당 주소로 접속해도 http://localhost:8080/swagger-ui/index.html로 리다이렉션 됨.

    groups-order: DESC # path, query, body, response 순으로 출력

    tags-sorter: alpha # 태그를 알파벳 순으로 정렬

    operations-sorter: alpha  # delete - get - patch - post - put 순으로 정렬, alpha를 사용하면 알파벳 순으로 정렬 가능

  paths-to-match:
    - /api/** # swagger-ui에 표시할 api의 엔드포인트 패턴

cloud:
  aws:
    parameterstore:
      enabled: true
      defaultContext: /config/goodswap/
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}  # 환경 변수로 설정된 액세스 키 사용
      secret-key: ${AWS_SECRET_ACCESS_KEY}  # 환경 변수로 설정된 비밀 키 사용
    region:
      static: ap-northeast-2
    s3:
      bucket: goodswap-s3-bucket
    stack:
      auto: false

logging:
  level:
    org.springframework.cloud.aws: DEBUG

server:
  address: 0.0.0.0
  port: 8081

  logging:
    level:
      org.springframework.security: DEBUG
      org.springframework.core.env: DEBUG
      org.springframework.cloud.aws: DEBUG